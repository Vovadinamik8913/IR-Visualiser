digraph "CFG for 'add' function" {
	label="CFG for 'add' function";

	Node0x56e38e2b1cd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{3:\l|  %4 = getelementptr inbounds i8, ptr %0, i64 12\l  %5 = load i32, ptr %4, align 4, !tbaa !5\l  %6 = getelementptr inbounds i8, ptr %0, i64 8\l  %7 = load i32, ptr %6, align 8, !tbaa !11\l  %8 = add nsw i32 %7, 1\l  %9 = icmp sgt i32 %5, %8\l  br i1 %9, label %._crit_edge, label %10\l|{<s0>T|<s1>F}}"];
	Node0x56e38e2b1cd0:s0 -> Node0x56e38e2b34c0[tooltip="3 -> ._crit_edge\nProbability 50.00%" ];
	Node0x56e38e2b1cd0:s1 -> Node0x56e38e2b3690[tooltip="3 -> 10\nProbability 50.00%" ];
	Node0x56e38e2b34c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{._crit_edge:\l|  %.pre = load ptr, ptr %0, align 8, !tbaa !12\l  br label %20\l}"];
	Node0x56e38e2b34c0 -> Node0x56e38e2b3630[tooltip="._crit_edge -> 20\nProbability 100.00%" ];
	Node0x56e38e2b3690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{10:\l|  %11 = icmp eq i32 %5, 0\l  br i1 %11, label %12, label %14\l|{<s0>T|<s1>F}}"];
	Node0x56e38e2b3690:s0 -> Node0x56e38e2b3fb0[tooltip="10 -> 12\nProbability 37.50%" ];
	Node0x56e38e2b3690:s1 -> Node0x56e38e2b4010[tooltip="10 -> 14\nProbability 62.50%" ];
	Node0x56e38e2b3fb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{12:\l|  %13 = tail call noalias dereferenceable_or_null(24) ptr @malloc(i64\l... noundef 24) #9\l  store ptr %13, ptr %0, align 8, !tbaa !12\l  store i32 1, ptr %4, align 4, !tbaa !5\l  br label %20\l}"];
	Node0x56e38e2b3fb0 -> Node0x56e38e2b3630[tooltip="12 -> 20\nProbability 100.00%" ];
	Node0x56e38e2b4010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{14:\l|  %15 = shl nsw i32 %5, 1\l  store i32 %15, ptr %4, align 4, !tbaa !5\l  %16 = load ptr, ptr %0, align 8, !tbaa !12\l  %17 = sext i32 %15 to i64\l  %18 = mul nsw i64 %17, 24\l  %19 = tail call ptr @realloc(ptr noundef %16, i64 noundef %18) #10\l  store ptr %19, ptr %0, align 8, !tbaa !12\l  %.pre1 = load i32, ptr %6, align 8, !tbaa !11\l  %.pre2 = add nsw i32 %.pre1, 1\l  br label %20\l}"];
	Node0x56e38e2b4010 -> Node0x56e38e2b3630[tooltip="14 -> 20\nProbability 100.00%" ];
	Node0x56e38e2b3630 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{20:\l|  %.pre-phi = phi i32 [ %8, %._crit_edge ], [ %.pre2, %14 ], [ %8, %12 ]\l  %21 = phi i32 [ %7, %._crit_edge ], [ %.pre1, %14 ], [ %7, %12 ]\l  %22 = phi ptr [ %.pre, %._crit_edge ], [ %19, %14 ], [ %13, %12 ]\l  %23 = sext i32 %21 to i64\l  %24 = getelementptr inbounds %struct.Edge, ptr %22, i64 %23\l  store i32 %1, ptr %24, align 8, !tbaa !13\l  %25 = load i32, ptr @ind, align 4, !tbaa !16\l  %26 = getelementptr inbounds %struct.Edge, ptr %22, i64 %23, i32 2\l  store i32 %25, ptr %26, align 8, !tbaa !17\l  store i32 %.pre-phi, ptr %6, align 8, !tbaa !11\l  %27 = getelementptr inbounds %struct.Edge, ptr %22, i64 %23, i32 1\l  store i64 %2, ptr %27, align 8, !tbaa !18\l  ret void\l}"];
}
