name: CI/CD

on:
  pull_request:
    branches: [ "main", "backend", "inwork", "cicd" ]
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  test-and-coverage:
    permissions: write-all
    runs-on: ubuntu-latest
    needs: checkstyle
    defaults:
      run:
        working-directory: ./backend
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Make gradlew executable
        run: chmod +x ./gradlew
    
      - name: Execute Gradle build
        run: ./gradlew build

      - name: Generate Jacoco report
        run: ./gradlew jacocoTestReport

      - name: Check coverage and publish
        id: jacoco
        uses: madrapps/jacoco-report@v1.2
        with:
          paths: ./backend/build/reports/jacoco/test/jacocoTestReport.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 80
          min-coverage-changed-files: 80
        
      - name: Generate javadoc
        run: ./gradlew javadoc
  
      - name: Publish javadoc
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: gh-pages
          clean: true
          folder: backend/build/docs/javadoc
          target-folder: backend

  checkstyle:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Run check style
        uses: nikitasavinov/checkstyle-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          checkstyle_config: '.github/google_checks.xml'
          reporter: 'github-pr-check'

  deploy:
    runs-on: ubuntu-latest
    needs: test-and-coverage
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Build package
        run: ./gradlew build

      - name: Deploy to Heroku
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          usedocker: true

  merge-guard:
    runs-on: ubuntu-latest
    needs: [checkstyle, test-and-coverage]
    steps:
      - name: Merge validation
        if: contains(needs.*.result, 'failure')
        run: |
          echo "‚ùå One or more checks failed - merge blocked"
          exit 1
